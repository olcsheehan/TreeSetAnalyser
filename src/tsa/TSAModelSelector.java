package tsa;


import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintStream;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import javax.xml.parsers.ParserConfigurationException;

import org.xml.sax.SAXException;

import beast.app.util.Application;
import beast.app.util.OutFile;
import beast.app.util.TreeFile;
import beast.app.util.XMLFile;
import beast.core.BEASTInterface;
import beast.core.Description;
import beast.core.Input;
import beast.core.Input.Validate;
import beast.core.Operator;
import beast.core.Runnable;
import beast.core.State;
import beast.core.parameter.IntegerParameter;
import beast.core.parameter.RealParameter;
import beast.core.util.CompoundDistribution;
import beast.core.util.Log;
import beast.evolution.alignment.Alignment;
import beast.evolution.alignment.Sequence;
import beast.evolution.branchratemodel.StrictClockModel;
import beast.evolution.branchratemodel.UCRelaxedClockModel;
import beast.evolution.datatype.Binary;
import beast.evolution.likelihood.AncestralStateTreeLikelihood;
import beast.evolution.likelihood.ThreadedTreeSetLikelihood;
import beast.evolution.likelihood.TreeLikelihood;
import beast.evolution.operators.DeltaExchangeOperator;
import beast.evolution.operators.IntRandomWalkOperator;
import beast.evolution.operators.ScaleOperator;
import beast.evolution.operators.SwapOperator;
import beast.evolution.operators.UniformOperator;
import beast.evolution.sitemodel.SiteModel;
import beast.evolution.substitutionmodel.Frequencies;
import beast.gss.NS;
import beast.math.distributions.Gamma;
import beast.math.distributions.LogNormalDistributionModel;
import beast.math.distributions.Prior;
import beast.util.TreeParser;
import beast.util.XMLParser;
import beast.util.XMLParserException;
import tsa.correlatedcharacters.polycharacter.CompoundAlignment;
import tsa.correlatedcharacters.polycharacter.CorrelatedSubstitutionModel;
import tsa.parameterclone.helpers.RescaledDirichlet;
import tsa.parameterclone.selector.Selector;

@Description("Perform correlated character analysis on D-PLACE data")
public class TSAModelSelector extends Runnable {
	public Input<Integer> particleCountInput = new Input<>("particleCount", "number of particles (default 1)", 1);
	public Input<Integer> subChainLengthInput = new Input<>("subChainLength",
			"number of MCMC samples for each epoch (default 100)", 100);
	public Input<File> dataFileInput = new Input<>("file", "CSV file exported from DPLACE data",
			new File("dplace/dplace-societies-2017-02-21.csv"));
	public Input<String> thresholdV1Input = new Input<>("v1", "Comma separated list of values for first DPLACE feature "
			+ "that are interpreted as 1. "
			+ "For example \"1,2,4\" means when the feature's value is 1 or 2 or 4 it becomes a 1, and otherwise a 0 "
			+ "(but \"NA\" is interpreted as missing data)"
			, Validate.REQUIRED);
	public Input<String> thresholdV2Input = new Input<>("v2", "As thresholdV1 but for second DPLACE feature",
			Validate.REQUIRED);
	public Input<Double> epsilonInput = new Input<>("epsilon",
			"stopping criterion: smallest change in ML estimate to accept", 1e-8);
	public Input<OutFile> outputInput = new Input<>("output", "where to save the dot file with results",
			new OutFile("/tmp/x.dot"));
	public Input<XMLFile> xmlFileInput = new Input<>("xml", "XML file containing NS analysis, so you can set your own priors. "
			+ "The IntegerParameter with id=\"indices\" will be replaced by one of the 16 possible combinations.");

	public Input<TreeFile> treeSetFileInput = new Input<>("treeFile", "file containing trees used for inference");
	
	public Input<Integer> threadCountInput = new Input<>("threads", "Number of threads to use (default 1)", 1);
	public Input<Boolean> useRelaxedClockInput = new Input<>("relaxed", "if true, a relaxed clock is used, otherwise a strict clock is used",
			false);

	public Input<String> codeInput = new Input<>("code", "column name containing the code for taxa in the tree, e.g  or 'Society id' or 'ISO code'", "Society id");
	
	@Override
	public void initAndValidate() {
	}

	String[] indices;
	double[] ml;
	double[] df;
    public static ExecutorService exec;
	CountDownLatch countDown;
	DecimalFormat format = new DecimalFormat("##0.0");
	int [] siteCount;

	final static String newick = "(((((((((((((((((aaq:1.7286434195998694,mic:1.7286434195998694):5.664396166195797,((crj:4.248561315105366,(crk:2.7148458638496007,csw:2.7148458638496007):1.5337154512557651):1.340384023487406,(moe:2.331982114420476,nsk:2.331982114420476):3.256963224172296):1.8040942472028938):1.4008359197463207,mez:8.793875505541987):0.21676995884462613,(((((ciw:2.7697365858658567,(ojc:1.5429338515896336,ojg:1.5429338515896338):1.226802734276223):1.1618914035890184,(ojb:2.4479402225241853,ojw:2.4479402225241853):1.4836877669306894):1.017651331876234,(ojs:3.4553945001663346,otw:3.455394500166334):1.4938848211647744):0.8772304490492129,pot:5.826509770380321):1.110389634401451,((kic:3.1819065905653234,sac:3.1819065905653234):1.7837313414971567,(mia:2.947290882895896,sjw:2.9472908828958957):2.018347049166584):1.9712614727192932):2.07374605960484):0.4546214308878156,((arp:2.5846818713490207,ats:2.5846818713490207):4.495968612457919,(bla:2.8658154400245492,chy:2.8658154400245492):4.21483504378239):2.3846164114674897):1.2231973366385258,(wiy:2.193539358154392,yur:2.193539358154392):8.494924873758562):2.3212543307540834,((((ari:2.5868054190310463,wic:2.5868054190310463):0.5016052790419874,paw:3.0884106980730333):2.4152510164838406,cad:5.503661714556874):6.684255256778011,(chr:4.049953691752013,(see:1.8489425623837155,wya:1.8489425623837155):2.2010111293682986):8.137963279582872):0.8218015913321519):0.9467151864197252,((aes:12.397470883576258,sht:12.397470883576258):1.104758491700288,(chh:3.443086781524769,wac:3.443086781524769):10.059142593751776):0.4542043738102173):0.7973731365432357,(((((ale:1.5593745219993627,(((ems:0.7528823336852857,esu:0.7528823336852857):0.410896253206223,ess:1.1637785868915085):0.27790374414520613,((esi:0.22721258442697131,esk:0.22721258442697131):0.33701172482733616,((ike:0.21022934558375006,kal:0.21022934558374973):0.17771652646320651,ikt:0.3879458720469569):0.17627843720735048):0.8774580217824067):0.11769219096264938):5.544244740052475,((((csi:0.30784751673260297,lmw:0.30784751673260297):0.8762559175062655,nsq:1.1841034342388685):0.13145022096385928,csm:1.3155536552027285):0.10834982865923815,skd:1.4239034838619662):5.679715778189872):3.532433787087057,sis:10.636053049138896):3.8726051781604465,(((((((((((apj:0.5332222052026442,apl:0.5332222052026442):0.4329809078669331,((apm:0.5891365352649103,apw:0.5891365352649107):0.14858778083598,nav:0.7377243161008908):0.22847879696868734):0.2312770822816972,apk:1.1974801953512748):1.5004529013002417,((((((bea:0.8784177504614947,(caf:0.3401746129259915,crx:0.3401746129259915):0.5382431375355032):0.6548698812221382,sek:1.533287631683634):0.3255441595965367,(dgr:0.910456943529789,(scs:0.5117225129317897,xsl:0.5117225129317897):0.39873443059799973):0.9483748477503811):0.08769753120494839,gwi:1.9465293224851177):0.18597914355869394,((chp:1.8909363665887058,(((haa:1.5576955765791234,ttm:1.5576955765791225):0.16609373174811348,tau:1.7237893083272364):0.10705222866295538,(kkz:0.5416464377589972,tht:0.5416464377589972):1.2891950992311945):0.060094829598513755):0.08768874467170695,((hoi:0.38412515353010696,koy:0.38412515353010696):0.5511079875638574,(ing:0.7609806423321351,tfn:0.7609806423321355):0.1742524987618279):1.0433919701664487):0.15388335478339998):0.24702563837143954,(clc:1.406976380710024,srs:1.406976380710023):0.9725577237052292):0.318398992236264):0.1466730252338384,(((ctc:0.8516192918842713,(gce:0.5001934309647548,tuu:0.5001934309647548):0.3514258609195161):0.1614689179263259,tol:1.013088209810597):0.5218696727454628,(((hup:0.5918991613583908,ktw:0.5918991613583913):0.30722324636311027,mvb:0.8991224077215011):0.09174164982757926,wlk:0.9908640575490805):0.5440938250069802):1.3096482393292945):0.6066524021725068,eya:3.451258524057862):0.5814952927429173,tli:4.0327538168007795):5.27344149101188,tkm:9.30619530781266):0.5133161992846862,(hax:3.7370149626726867,hdn:3.7370149626726867):6.082496544424658):4.606198290125803,((((((((asb:0.8868058646871368,lkt:0.8868058646871374):0.2111638482636915,dak:1.097969712950829):0.975544134338266,oma:2.073513847289095):0.5522985469599244,(iow:1.4908747187213314,win:1.4908747187213314):1.1349376755276883):1.4862478973269906,((cro:1.2281035850027733,hid:1.2281035850027733):1.902932304468917,mhq:3.13103588947169):0.9810244021043202):1.4294828894532783,chc:5.541543181029288):6.801329064592353,(wao:3.766914245758913,yuk:3.766914245758913):8.57595799986273):1.8759322932469278,(((nol:3.3168720091477444,pwi:3.316872009147745):0.5020429074141632,wnw:3.8189149165619085):10.105982341370936,(was:12.786307630039015,yuc:12.786307630039014):1.1385896278938308):0.2939072809357235):0.20690525835458118):0.07007754318671822,((((blc:5.008365253637626,((((cea:0.7616514606089744,qun:0.7616514606089744):3.8081830773367615,((((col:1.6640372897524365,crd:1.664037289752437):0.1729316140208459,oka:1.8369689037732826):0.12454914797150374,fla:1.9615180517447863):0.7679848155095161,(lil:1.7951248521540246,(shs:0.8456821896705171,thp:0.8456821896705169):0.9494426624835084):0.9343780151002772):1.840331670691432):0.271458627434626,(((((clm:1.4567356282679358,coo:1.456735628267936):0.8382803991438494,(ptw:2.024362183280669,(slh:1.5151577778480472,str:1.515157777848048):0.5092044054326221):0.27065384413111593):0.09802401287658169,twa:2.3930400402883674):0.12414793974699201,squ:2.5171879800353594):0.013132994467778047,hur:2.5303209745031365):2.310972190877224):0.08144086898994285,til:4.922734034370304):0.08563121926732276):1.7486682296973566,((git:4.037020807652768,tsi:4.037020807652768):2.1367038406621255,(((has:1.32986521413621,(hei:0.6968075912458543,kwk:0.6968075912458543):0.6330576228903555):1.1756071295784547,(myh:2.374908696450844,nuk:2.3749086964508437):0.13056364726382075):3.2696572345701114,qui:5.775129578284775):0.39859507003011885):0.5833088350200892):1.5042739589021403,kut:8.261307442237124):2.6176597735662135,csz:10.878967215803335):3.616820124606532):0.01287088688947513):0.04477435999961976,(((kee:4.48828591309115,kjq:4.48828591309115):6.190780033454007,kyh:10.679065946545157):2.0710056963084575,sln:12.750071642853614):1.8033609444453482):0.20037429833103637):0.0666792642018521,((kla:9.267595906594225,((nez:3.923831589982504,((tqn:0.9475697289151278,uma:0.9475697289151278):0.8960167052197174,yak:1.8435864341348454):2.080245155847659):4.3841146401049205,yok:8.307946230087424):0.9596496765068014):3.490008513153189,zkk:12.757604419747414):2.0628817300844364):0.7572537631882614,(((((((((chl:0.9484353612963271,cup:0.9484353612963271):1.5827542204622014,lui:2.531189581758529):1.2626056947824131,((ser:2.4698509261872403,tub:2.469850926187241):0.23518602354133833,xgf:2.705036949728578):1.0887583268123628):0.9208936895682589,(((com:2.6506581723352562,shh:2.6506581723352562):0.1302571087115285,par:2.7809152810467843):1.1320212953364814,((mnr:1.8249804080501035,pao:1.8249804080501035):1.8261704839002901,(ute:1.8018692686991158,xaw:1.8018692686991158):1.8492816232512774):0.2617856844328723):0.8017523897259347):0.5908934070625298,hop:5.305582373171731):0.8007614723231686,((((hch:1.7503817804348765,(nci:0.7624678769522745,nhn:0.7624678769522745):0.9879139034826019):2.343627686914052,(tar:3.365296988063874,yaq:3.3652969880638732):0.728712479285055):0.08889133903648805,opt:4.182900806385417):0.7634827012853407,(ntp:2.6103860917575368,ood:2.6103860917575368):2.3359974159132206):1.159960337824141):6.627469278068552,crz:12.733813123563452):2.7763091155250663,(((((((cho:2.011117981601604,cic:2.011117981601604):3.501164521054155,(mik:3.0873452403654924,mus:3.087345240365493):2.424937262290268):8.763500364684596,(sei:13.440840871297944,xcw:13.440840871297944):0.8349419960424118):0.4379377733407903,(((kju:0.4013156323705893,peq:0.4013156323705893):0.48721554041145493,pej:0.8885311727820442):0.7770955843685664,peb:1.665626757150611):13.048093883530537):0.22280554891126414,(((kio:3.8671881834140334,(tix:1.6836725797570269,twf:1.6836725797570269):2.183515603657007):0.9090649274472367,(tew:1.435142593501888,tow:1.435142593501888):3.341110517359381):6.0846613584706635,ynn:10.860914469331934):4.075611720260477):0.5295501943114633,((((mjd:3.6500854103936295,nsz:3.650085410393629):0.13819365790520788,nmu:3.7882790682988374):0.7167053528344747,vmv:4.5049844211333125):10.540788524541629,(tsz:14.966359237558224,zun:14.966359237558228):0.07941370811671256):0.42030343822893457):0.004777206700438796,(cid:6.781302874712248,((((coc:0.7056470978705027,dih:0.7056470978705027):0.5665578997420143,ppi:1.2722049976125167):0.07223894792343599,(((mov:0.7088484201785421,mrc:0.7088484201785413):0.22413234617755728,yuf:0.9329807663561002):0.0035632596245499526,yum:0.9365440259806487):0.4078999195553037):0.3232606040126689,klb:1.6677045495486218):5.1135983251636254):8.689550715892064):0.03926864848420486):0.018065676418761,ncz:15.528187915507278):0.049551997512834234):0.1733979746044696,((acv:4.548947714663549,atw:4.548947714663549):11.187002286201782,((((((((caa:1.3088235288370207,tzh:1.3088235288370207):1.6532677147589236,jac:2.9620912435959434):0.8644139752799354,(((cak:1.536057257993755,quc:1.536057257993755):0.5755912018326617,poc:2.111648459826416):0.6323636208097985,mam:2.7440120806362147):1.082493138239664):0.9880738392795458,(lac:2.001885189729271,yua:2.001885189729271):2.812693868426154):1.2154500101930523,hus:6.030029068348477):2.2528596370671004,(((csa:3.58135858286143,(ote:2.136596243595768,pei:2.136596243595768):1.4447623392656626):2.5437985473104625,((mau:1.1589499370505632,zpu:1.1589499370505632):1.017063353985248,mxa:2.176013291035811):3.9491438391360822):1.67088039001995,huv:7.7960375201918435):0.48685118522373383):2.7610600344272687,chd:11.043948739842847):3.9785511220792973,(ctm:14.647470562717878,(len:13.16721443789435,tos:13.167214437894351):1.4802561248235282):0.37502929920426453):0.7134501389431875):0.015187886759250091):0.1594390563152519,(((((((((((((acs:2.101451607429257,xer:2.1014516074292575):0.21911478911294768,xav:2.320566396542205):1.081897297541485,(apn:1.3415106805387784,ram:1.3415106805387784):2.0609530135449123):0.8695823503810787,xok:4.272046044464769):1.0486481564895413,(kpj:3.3473147016675093,kqq:3.3473147016675098):1.9733794992868012):2.428053139300453,(((awe:2.6660692518487403,myu:2.6660692518487403):0.638056635162612,mav:3.304125887011353):0.83014757106357,(((cod:1.1085549668321757,tpn:1.1085549668321757):1.084638330098647,(kay:1.4673264495744207,(taf:0.8356146357594875,tqb:0.8356146357594875):0.6317118138149327):0.7258668473564023):0.10177106240429046,(((gui:0.959935872025872,guq:0.9599358720258724):0.165366091519208,(gun:0.6177998838475138,xet:0.6177998838475138):0.5075020796975669):0.7520145203310751,(srq:0.6651436659143221,yuq:0.6651436659143221):1.2121728179618332):0.4176478754589581):1.8393090987398097):3.6144738821798406):0.16526680953211326,(bor:3.4471036659928407,umo:3.4471036659928407):4.466910483794036):2.336255719085309,((cub:1.2667833603340626,tuo:1.2667833603340626):8.610345975748706,(((guu:0.8139419080697675,wca:0.8139419080697675):1.4237989958104547,shb:2.2377409038802214):2.196900602022102,xsu:4.4346415059023245):5.4424878301804425):0.37314053278941905):0.09935484562404717,(((((ako:2.860034643452296,((car:1.8651812942069055,mch:1.865181294206906):0.8216469505665063,way:2.6868282447734124):0.17320639867888454):2.2659780620110443,waw:5.12601270546334):1.1124166194693323,yup:6.238429324932673):0.45819564590621287,(bkq:1.3248507693770442,kui:1.3248507693770442):5.371774201461841):0.21472674126000157,(((aoc:0.5643783302648178,mbc:0.5643783302648178):0.8296038247248395,pbh:1.3939821549896574):1.2493891431717423,yar:2.6433712981614006):4.2679804139374875):3.438273002397346):1.6736654145822492,(tpy:11.817980863500848,yad:11.817980863500846):0.20530926557763607):0.5944460772966984,(((((amc:0.7118513804435136,cao:0.7118513804435133):0.42468194856049546,shp:1.136533329004009):8.219537796105742,jiv:9.356071125109752):2.0097182645174545,tca:11.365789389627205):0.9381643957086023,(((((((arw:3.1882046997942806,(cab:2.162117042943085,((guc:0.8206746882441804,pbg:0.8206746882441804):1.2116740355835995,tnq:2.03234872382778):0.12976831911530473):1.026087656851196):0.6876683506805934,((kpc:1.1503479439209918,pio:1.1503479439209918):1.5207467678181619,wap:2.6710947117391535):1.20477833873572):0.5090678200002063,plu:4.38494087047508):0.4275015242667166,(((cni:1.3867986509635635,pib:1.3867986509635635):1.0474376323256898,ter:2.4342362832892532):0.7392827135804199,pab:3.1735189968696726):1.6389233978721247):5.550474266902664,guh:10.36291666164446):1.3191180380557839,(mbr:11.069914483478126,(pid:8.87809910293359,wba:8.87809910293359):2.1918153805445364):0.6121202162221184):0.4135995112622517,((((bzd:1.325003181214333,(gym:0.8780048322198081,kvn:0.8780048322198081):0.44699834899452473):0.8018583765852525,(((chb:0.5083992652311292,tuf:0.5083992652311292):0.16294969249487734,mot:0.6713489577260067):0.5675210444538256,kog:1.2388700021798325):0.8879915556197531):7.0230620216831845,huu:9.149923579482769):1.9912368451639093,yae:11.14116042464668):0.9544737863158179):0.20831957437331106):0.3137824210393738):0.13608659343611684,((((alc:5.563418107675118,(ona:3.3550876122193487,teh:3.3550876122193487):2.20833049545577):2.233805760362797,arn:7.797223868037916):0.057853914559551356,yag:7.855077782597467):4.0944293607632805,((((((axb:2.391320575027303,tob:2.391320575027303):1.7513752468857695,kbc:4.1426958219130725):5.668015021723253,((cax:7.758461942632056,gta:7.7584619426320565):1.7020218041647723,ceg:9.460483746796829):0.3502270968394967):0.17527822416009897,(crq:1.1257490945921045,wlv:1.1257490945921045):8.860239973204319):0.9547697854472474,(leg:10.262454757665255,(nab:9.523907178969713,ure:9.523907178969713):0.7385475786955435):0.6783040955784152):0.9327723118391376,(ayr:10.793467634112702,quz:10.793467634112702):1.0800635309701079):0.07597597827793834):0.8043156564505516):2.811228077544081,(((cbi:12.916754409610448,miq:12.916754409610448):2.3309945761976447,tjm:15.247748985808093):0.3107821268316151,(((emp:9.359139373533337,pbb:9.359139373533338):5.9593178908526525,(mir:4.114183355672523,poi:4.114183355672523):11.204273908713466):0.0808814953083079,jic:15.399338759694297):0.15919235294541068):0.0065197647156711724):0.34552606658445306):19.87711359554126,(ain:13.565178616963712,niv:13.56517861696371):22.222511922517384):18.536883251484255,(((((((aar:3.722076662234322,((((arv:0.8567663197428367,dsh:0.8567663197428367):0.8023431058210108,som:1.6591094255638474):0.3430530332566277,((gax:0.5944612148048886,gaz:0.5944612148048886):0.49141043900337733,kxc:1.0858716538082656):0.9162908050122096):0.5239208930929871,tsb:2.526083351913462):1.1959933103208593):0.5536351567429665,((bji:0.9358800980709144,sid:0.9358800980709139):1.1899243406885844,drs:2.125804438759499):2.14990738021779):2.119461031567929,(ahg:4.311187589030033,(bej:2.873338185482345,byn:2.873338185482346):1.4378494035476868):2.0839852615151857):0.4761086551656648,(gow:1.6897247079089837,irk:1.6897247079089834):5.181556797801898):4.711939620285715,((((((((acm:3.164735480203146,(ars:2.169839107619486,ayn:2.169839107619486):0.9948963725836601):0.2225242670583567,(ajp:0.9757560351364787,apc:0.9757560351364787):2.4115037121250236):1.9496258214592062,(((aeb:0.8533434707144364,arq:0.8533434707144364):0.3828579991002927,ary:1.236201469814729):0.18115734792706406,(ayl:1.3157075552757462,mey:1.315707555275746):0.10165126246604705):3.919526750978914):0.02958311244981271,((aec:4.075125895328927,(apd:2.6850431847961542,shu:2.6850431847961542):1.390082710532774):0.151446926578382,arz:4.22657282190731):1.139895859263211):0.3257517897512727,heb:5.692220470921794):0.39340838542054435,((amh:1.235360806724086,sgw:1.235360806724086):1.519053986932593,(tig:1.4670805750327687,tir:1.4670805750327687):1.28733421862391):3.331214062685658):3.9689802029962236,((((anc:1.8913425023667425,((bol:0.41557640575275534,kai:0.41557640575275534):0.6009298261744475,kna:1.0165062319272027):0.8748362704395405):0.5553193005528494,hau:2.4466618029195915):0.9547249609773258,(bux:1.158457108192996,ngi:1.158457108192996):2.2429296557039216):1.8083335829084968,((((((bcy:1.6296207749595035,maf:1.6296207749595037):0.6536848027836191,gde:2.283305577743123):0.25499510016502125,bta:2.538300677908144):0.24599881241941235,(hwo:0.7466097491232195,ttr:0.7466097491232195):2.037689741204336):0.8701220897295658,((((bdm:1.051181009136224,mug:1.051181009136224):1.201391875629129,kvj:2.2525728847653523):0.3965844394354314,(giz:1.8047324518606753,kot:1.8047324518606749):0.8444248723401087):0.22704328212703206,((bwr:0.8327593113669786,mrt:0.8327593113669786):0.585148884985326,pbi:1.417908196352304):1.458292409975512):0.7782209737293062):1.4097766855561087,mcn:5.064198265613231):0.14552208119218335):4.844888712533147):0.6059959399740027,((((gnc:2.9291062769478637,zen:2.9291062769478637):3.6066380282910036,((kab:3.1178393546632015,(shi:1.5868626517222353,tzm:1.5868626517222353):1.5309767029409673):2.997924528004982,((taq:2.094855950305008,ttq:2.0948559503050075):1.4147429520140222,thv:3.50959890231903):2.606164980349154):0.419980422570684):0.28144258133832345,(((mzb:1.5141214685685476,tia:1.5141214685685476):1.806243454854017,rif:3.3203649234225634):0.1898208780425117,shy:3.5101858014650755):3.3070010851121157):1.1501164884727322,siz:7.967303375049925):2.6933016242626397):0.9226161266840336):2.4819999840555518,eus:14.06522111005215):38.13035816398417,(((((abk:3.013767391359579,kbd:3.013767391359579):6.195944597874718,bsk:9.209711989234297):4.675806434233712,((((((aln:2.75534384107949,ell:2.75534384107949):3.937714554975652,(((((ben:1.4690782700097307,(ccp:1.3004257036335756,ori:1.3004257036335753):0.16865256637615555):1.0717636762912797,((((bhb:1.1724740751668448,guj:1.1724740751668443):1.1627116688743742,hne:2.3351857440412194):0.05666526411284112,(bho:0.836905255985927,mai:0.836905255985927):1.5549457521681336):0.09760063213494607,(sin:0.44748195022280357,ved:0.44748195022280357):2.0419696900662023):0.05139030601200334):0.590996850047691,(bfz:2.901696835708607,(((kas:1.9428126684405924,(pan:1.2252278507006749,snd:1.2252278507006749):0.717584817739918):0.2804591722874279,mvy:2.2232718407280205):0.04566002714961126,scl:2.2689318678776322):0.6327649678309752):0.23014196064009385):0.5661659111586173,xvi:3.698004707507318):1.0152950379986567,(((bgp:1.6442124206346374,ckb:1.6442124206346374):1.1068741764399208,((bqi:1.2043202767769514,pes:1.204320276776951):0.8522099484081307,haz:2.056530225185081):0.6945563718894769):0.7869477397217794,(oss:2.853400935447334,pbu:2.853400935447334):0.6846334013490036):1.1752654087096372):1.9797586505491669):0.6399021584275939,((((((bel:0.8721327377640536,ukr:0.8721327377640536):0.3755405838670496,rus:1.2476733216311033):0.10950041194355764,ces:1.3571737335746612):0.21982186664399506,(bul:0.46910309511235493,srp:0.46910309511235493):1.1078925051063022):1.4092288277409317,(lav:1.3491678774821578,lit:1.3491678774821578):1.6370565504774295):2.7935942289859863,(((eng:1.5578049302008594,nld:1.5578049302008594):0.31430944489918633,isl:1.872114375100046):2.841561463401569,(((((fra:0.6837703889535381,wln:0.6837703889535381):0.8450616454819757,(por:0.5983465652795149,spa:0.5983465652795149):0.9304854691559992):0.2210184615083104,nap:1.7498504959438244):0.17397464660442874,ron:1.9238251425482527):2.3252163819566993,gle:4.249041524504952):0.46463431399666355):1.066142818443958):1.553141897537162):0.43566250685082863,hye:7.768623061333565):1.1454423021939348,(kat:4.6510569976805725,sva:4.6510569976805725):4.263008365846926):0.9059752673130941,che:9.820040630840595):4.065477792627416):35.374084853896456,((((anq:3.84847314328019,oon:3.84847314328019):6.080404076283649,((((cde:1.9511707949242643,mmk:1.9511707949242645):0.6982483654268608,tel:2.6494191603511257):0.48842730858011496,kru:3.1378464689312398):0.8403012208691365,((((daq:0.7160272775616959,kff:0.7160272775616962):0.14745635039617888,gno:0.863483627957875):0.9090119575776969,kxu:1.7724955855355722):1.2830796737709078,((((((kej:0.4932143686331256,mal:0.49321436863312573):0.14459966496146182,pcf:0.6378140335945879):0.44330876164055155,(mjp:0.5408338646720542,tam:0.5408338646720542):0.5402889305630844):0.2624688241881379,kfa:1.3435916194232769):0.26922590101646415,tcx:1.612817520439741):0.5477472875237961,xuj:2.160564807963537):0.8950104513429427):0.9225724304938967):5.950729529763463):22.334117795211014,(apq:27.095718581980346,sii:27.095718581980346):5.167276432794509):15.62808399554033,((((((((((bak:0.42788584720943174,tat:0.42788584720943174):0.6306838677958322,kaz:1.0585697150052642):0.48750030802355804,(kdr:1.0262858212371158,kum:1.0262858212371158):0.5197842017917058):0.15751553370932547,((qxq:0.8027242545093857,tuk:0.8027242545093857):0.25454443645578373,uzn:1.0572686909651696):0.6463168657729779):0.09270264199359146,(gag:0.8112904347987061,tur:0.8112904347987061):0.984997763933033):0.41365184439559166,sah:2.20994004312733):0.1745301160224737,chv:2.3844701591498043):4.684731697883702,(((((((((est:0.5926526928138958,liv:0.5926526928138958):0.6891868669386736,vot:1.2818395597525687):1.0330454004008558,((izh:1.794896403414515,vep:1.7948964034145147):0.31028001572035846,olo:2.1051764191348736):0.2097085410185513):0.4566497052606868,myv:2.771534665414111):0.6334937496826165,mhr:3.4050284150967283):0.5312906364652097,hun:3.9363190515619375):0.7125983523367965,((kca:1.4481242206795442,mns:1.4481242206795442):2.283468358090973,udm:3.7315925787705173):0.9173248251282162):0.09335152746236375,smj:4.742268931361099):0.579516056872257,(nio:2.979979336229767,(sel:2.089606578456905,yrk:2.089606578456905):0.8903727577728615):2.341805652003588):1.7474168688001503):4.076344493817171,(((((bxr:0.5280955427684833,(khk:0.32412956259770215,mvf:0.32412956259770215):0.2039659801707821):0.5444724218337473,xal:1.0725679646022304):0.03314875888957025,mhj:1.1057167234918006):0.005741834878238983,(dta:0.6070797717639774,mjg:0.6070797717639773):0.504378786606062):5.8654175654454965,ket:6.976876123815536):4.168670227035141):26.19920433997283,(((ckt:1.944898203798073,kpy:1.944898203798073):3.5725613781015144,itl:5.517459581899588):25.711668941977848,(((evn:1.7985594430064358,neg:1.7985594430064367):0.15222953652451476,(((gld:0.8463083545487613,(oaa:0.5803058362071242,ulc:0.5803058362071245):0.26600251834163735):0.38739869350713485,(oac:0.734446704763679,ude:0.734446704763679):0.49926034329221736):0.6503802109673995,(mnc:0.9814325752090224,orh:0.9814325752090219):0.9026546838142732):0.06670172050765522):4.480678395203547,ykg:6.431467374734498):24.79766114914294):6.115622166946068):10.546328319491678):1.3685242670492812):0.9505664379917462,((((((((((((((abs:1.3521804851162895,(iba:1.0943916328956744,((kvb:0.45378770984372596,zlm:0.4537877098437262):0.17593816480587254,(min:0.3604420722337785,zmi:0.3604420722337785):0.26928380241582045):0.46466575824607603):0.2577888522206151):0.6632183255261865,(cjm:0.7123429818571145,rad:0.7123429818571146):1.3030558287853615):0.36532483330120913,(ban:0.6697444225532824,smw:0.6697444225532824):1.7109792213904034):0.3911937213153247,((bbc:0.4985726068567862,mwv:0.4985726068567862):0.873634655351879,mwt:1.3722072622086656):1.3997101030503436):0.8697923343471685,jav:3.641709699606177):0.5020969660033971,((((((((((adz:0.7310598246754224,buk:0.7310598246754224):2.1973774864215896,(mva:2.500731123501636,woc:2.500731123501636):0.42770618759537626):0.030156508408488936,(bpg:1.8175719182070107,xsi:1.817571918207011):1.1410219012984903):0.587333872307874,((((bnp:1.1842958528697627,nak:1.1842958528697627):1.97412788878002,(hrc:3.0156377684829856,((sbb:1.8998942041481037,tpz:1.8998942041481042):0.9613191304936184,tva:2.8612133346417226):0.15442443384126392):0.14278597316679686):0.09579243505347312,(ncf:1.3103954035712255,wiv:1.3103954035712257):1.9438207731320303):0.1946651829356716,((((bwd:0.6550956391022735,mox:0.6550956391022735):0.9945486681102991,dob:1.649644307212573):0.48205990128148124,swp:2.131704208494055):0.9078267740357862,(kij:2.806329100294136,(mek:2.376827266300981,meu:2.376827266300981):0.4295018339931551):0.23320188223570515):0.40935037710908695):0.09704633217444769):0.06300502963978749,(((((aji:2.2972664234288747,(erg:1.9690993582411,nwi:1.9690993582411):0.32816706518777417):0.6155508735633837,dhv:2.9128172969922583):0.20474336854496222,(((lmu:1.060047400560022,sax:1.0600474005600224):0.2707222378319696,(mmg:1.0856136489338168,sns:1.0856136489338168):0.24515598945817496):0.9945157459148313,mtt:2.325285384306823):0.7922752812303973):0.19132515403403438,ntu:3.308885819571255):0.03546839191615225,(((apb:2.252662855354045,kwd:2.252662855354045):0.41539127631461037,lgu:2.6680541316686552):0.6394809765518294,((((((((((cal:0.36811860259856044,mrl:0.36811860259856044):0.1223558490178766,chk:0.49047445161643655):0.09808243683440276,woe:0.5885568884508388):0.11070693692606048,uli:0.6992638253768995):0.4395255097030084,pon:1.1387893350799072):0.3190435130886391,mah:1.4578328481685467):0.4464010446581197,gil:1.9042338928266669):0.2929429727675603,kos:2.1971768655942263):0.3752898835627372,nau:2.5724667491569626):0.6000862594702836,(((fij:0.7553386727601539,llx:0.7553386727601539):1.2943587000384444,(((((fud:1.4146746346028884,(pkp:1.2517638508203914,wls:1.2517638508203912):0.1629107837824968):0.13275110677036905,((smo:0.6414489142773289,tkl:0.6414489142773289):0.4832608464033593,tvl:1.1247097606806884):0.42271598069256955):0.0331440764689952,(mnv:0.4247120675059682,tkp:0.4247120675059682):1.1558577503362848):0.07992525565652198,(((((haw:1.0410183266600246,(mri:1.0315836890289394,((pmt:0.49898404293852766,tah:0.4989840429385275):0.5063297021532022,((pnh:0.30294442938006094,rkh:0.30294442938006094):0.5814699012281033,rar:0.8844143306081645):0.120899414483565):0.026269943937209606):0.009434637631085208):0.09844049359498697,(mrq:0.635068663610498,mrv:0.635068663610498):0.5043901566445139):0.016720184177884345,rap:1.156179004432896):0.42959526210002785,ojv:1.5857742665329244):0.06097238292825602,kpg:1.6467466494611807):0.013748424037594464):0.008861367592114977,(niu:0.7344483791631348,ton:0.7344483791631348):0.9349080619277548):0.3803409317077082):0.596140368962867,rtm:2.645837741761466):0.5267152668657813):0.13498209959323715):0.03681910326692206):0.26457850996575605):0.030146571464559457,((lle:1.3900370865282128,(ttv:0.9495240321571519,wuv:0.9495240321571519):0.44051305437106114):1.2228806873888056,yap:2.612917773917018):1.0261615190007034):0.0912317919148058,wrp:3.730311084832528):0.12368152188891823,(((aol:2.78818850795642,(kei:1.8224216325803522,slu:1.8224216325803528):0.9657668753760666):0.45218936026432477,((kod:2.287607683552163,xbr:2.287607683552163):0.5835837943668083,slp:2.8711914779189716):0.3691863903017736):0.06655239143564806,(tet:2.81809494199894,twu:2.81809494199894):0.48883531765745225):0.5470623470650549):0.042379324701608656,(cha:2.0560494657536363,pau:2.0560494657536363):1.8403224656694204):0.09194873253378955,(mak:0.8643351539501279,sda:0.8643351539501279):3.1239855100067175):0.1554860016527293):0.017792078156927182,(((dtp:1.6292995976195808,pna:1.6292995976195812):0.5718382883438038,sge:2.201137885963385):1.379368859622908,(((msh:0.15141111166485877,tdx:0.15141111166485877):0.35317334394799615,(plt:0.3313030524506043,(skg:0.25616057097149775,tkg:0.25616057097149786):0.07514248147910696):0.1732814031622511):2.0878987374371887,ssb:2.592483193050045):0.9880235525362484):0.581091998180209):0.009109654350741181,((((agt:1.6354177824552556,(apf:1.4028201343537747,dgc:1.402820134353775):0.23259764810148087):0.16647607380848073,((ifb:1.2097842974188922,(lbk:0.9074813321896428,xnn:0.9074813321896428):0.3023029652292498):0.33535322101412035,knb:1.5451375184330132):0.2567563378307236):0.471094645951575,(sbl:1.354347680908366,tao:1.354347680908366):0.9186408213069448):0.6427898551285676,((((akl:1.4381817433005697,ceb:1.4381817433005697):0.5144276631126881,(hnn:1.4909909152314318,(plw:0.7031451706457518,tbw:0.7031451706457518):0.7878457445856804):0.46161849118182574):0.2646157575436858,(mbb:1.7158131304663438,syb:1.7158131304663438):0.5014120334905994):0.3753507189844787,bpr:2.5925758829414223):0.32320247440245753):1.2549300407733637):0.7004447752932537,pwn:4.871153173410496):0.46480406906914595,((ami:1.4751182717423552,tay:1.475118271742355):0.648954790831799,bnn:2.1240730625741535):3.2118841799054887):0.3212995512495995,pyu:5.657256793729242):3.1318860880657544,(hea:2.2712362154326766,mji:2.2712362154326766):6.51790666636232):5.82028420300392,(((((adi:2.955763543210739,(bod:0.8005162337630284,xsr:0.8005162337630284):2.155247309447711):0.6359134024612954,(lep:1.6896558827433703,mgp:1.6896558827433703):1.9020210629286642):2.6842482290749268,(((((ahk:1.8956861326811638,iii:1.8956861326811638):1.5665788060361547,(mya:1.3105489752870372,rki:1.3105489752870372):2.1517159634302816):1.2375900380956733,((grt:0.8925306893445062,xac:0.8925306893445062):1.8188936663697601,kac:2.711424355714266):1.9884306210987264):0.6377602661944808,((((aim:0.8348845604333012,lus:0.8348845604333008):0.6668429037700506,(mrh:0.8795859192853089,sez:0.8795859192853089):0.6221415449180421):0.7171760794903062,(pub:0.6424275846071719,tcz:0.6424275846071719):1.576475959086486):1.5790678903360416,(mjw:2.6221256654775003,((njh:1.2207202925277751,njo:1.2207202925277751):0.8474182114022928,(njm:1.2872397246977778,(nre:0.6267835662396364,nsm:0.6267835662396364):0.6604561584581422):0.7808987792322901):0.5539871615474321):1.175845768552199):1.5396438089777735):0.848852345602034,pwo:6.186467588609507):0.08945758613745447):0.9923086913296792,(bca:5.601232183322402,((cmn:1.5772372390979468,wuu:1.577237239097947):0.7164880319583002,(nan:1.2979761892203754,yue:1.2979761892203754):0.9957490818358719):3.3075069122661556):1.6670016827542389):3.189407759637584,(((((biy:1.0279661192214078,(hoc:0.5617922243665259,unr:0.5617922243665259):0.4661738948548819):0.7596577488974958,sat:1.787623868118904):3.9212018918295155,((caq:3.6011650187070376,sea:3.601165018707038):1.1247776787754584,khm:4.7259426974824965):0.9828830624659233):0.23806837326330488,((kha:2.6136826682303753,((lbn:0.7547888608735434,lcp:0.7547888608735434):0.7460344477168599,pll:1.5008233085904028):1.1128593596399718):3.2397226554507284,(kns:5.443436055065815,((mng:3.766421396721448,vie:3.766421396721447):0.857339207277521,(mra:2.882217210046292,mtq:2.882217210046292):1.7415433939526768):0.8196754510668471):0.4099692686152876):0.093488809530621):0.9874050814183075,(lic:2.68052484286538,tha:2.68052484286538):4.253774371764653):3.523342411084193):4.1517854590846905):18.27639667707668,((jpn:5.370237783151111,((mvi:0.8919100711749063,rys:0.8919100711749063):1.1902704790391245,ryu:2.0821805502140305):3.2880572329370814):2.2477404912447536,kor:7.617978274395866):25.26784548747973):17.324345953480616):1.9854095586801037):2.1289945169290334):13.140423909357182,((((((((abt:1.215415481269754,ian:1.215415481269754):23.627360703013906,mgu:24.84277618428366):13.467390966787057,(aon:26.907949505685853,oro:26.907949505685853):11.402217645384866):4.765941902179257,(byz:27.925576031704047,kig:27.925576031704043):15.150533021545929):0.2063637122344062,kmo:43.28247276548438):5.60919307828253,((((((((dnt:6.553447843922691,(((kgq:1.9485227791742061,kts:1.9485227791742061):0.47309038942188186,szb:2.421613168596088):2.3924660111662295,snp:4.8140791797623175):1.7393686641603736):0.9028961777036191,(enq:5.237072374395657,for:5.237072374395658):2.2192716472306513):0.23367289022950022,ekg:7.690016911855809):0.023332732126700506,ubu:7.71334964398251):0.14808675300074192,(okv:4.880230478568318,wnc:4.880230478568318):2.9812059184149335):19.095795913993037,(siw:20.867822514077755,yle:20.867822514077755):6.089409796898536):11.491603871767943,((kbk:0.4946030483313712,kqi:0.4946030483313712):32.72057627729143,(kjd:28.521812310131406,tlb:28.521812310131406):4.69336701549139):5.233656857121439):6.369881540910022,(foi:34.73989040683745,(wro:3.6174764676658873,wub:3.6174764676658873):31.12241393917157):10.078827316816799):4.072948120112656):2.2409663304219265,((iar:33.538509604665364,xtz:33.53850960466536):12.901828146751996,((lrg:37.98088030719673,ulk:37.98088030719673):2.8251215337435838,mrz:40.80600184094031):5.634335910477041):4.692294422771482):0.6710820571551466,(((((((((((aer:0.575677625569953,aly:0.575677625569953):0.8575404163632765,axl:1.4332180419332297):1.3372945287027111,(wgu:1.381847301863039,zku:1.381847301863039):1.388665268772901):1.797016115619627,(dif:4.287426109723363,((drl:2.8674484932127466,unn:2.8674484932127466):1.383395119655379,rxw:4.250843612868127):0.03658249685523618):0.2801025765322054):0.42707073561516307,(dbl:3.5292854799876885,((((fln:0.5885673454627881,(ump:0.5270279238297743,wim:0.5270279238297734):0.06153942163301507):0.5183042558296876,yyr:1.1068716012924773):2.0517317807568354,mwp:3.1586033820493125):0.20417240632626266,(gvn:1.6999233581314963,wrg:1.6999233581314965):1.6628524302440784):0.16650969161211338):1.4653139418830419):0.1899542443732951,(((bdy:3.1269216002523343,tjw:3.1269216002523343):0.017254390637538197,(kld:0.9868545463520959,wyb:0.9868545463520959):2.1573214445377764):0.1079397966426856,nay:3.252115787532558):1.9324378787114673):0.49026402031732363,((((ddj:1.608356376479678,wbp:1.608356376479678):1.9270316038322879,(gbd:2.9240862596679604,((kdd:2.1933182348924634,(mpj:0.7860953515607771,wbt:0.7860953515607771):1.407222883331686):0.12021456481951587,((ntj:0.8834912422593781,pjt:0.8834912422593784):0.6799147673227047,piu:1.5634060095820839):0.750126790129896):0.6105534599559812):0.6113017206440037):0.5723267637518838,(nju:2.4145863332863624,vka:2.4145863332863624):1.693128410777486):0.6392081575389659,(djb:1.3723238005551273,duj:1.3723238005551273):3.374599101047687):0.9278947849585348):1.0927109805308817,(gyd:3.6540441622132396,lbz:3.6540441622132396):3.113484504878993):12.51196976409652,((bvr:13.701317718917773,mpb:13.701317718917773):5.203752991090422,mwf:18.905070710008196):0.374427721180556):14.564780963330186,(gbu:31.764135538608233,(gia:23.599691806533144,tiw:23.599691806533144):8.164443732075089):2.0801438559107055):12.731352888528221,((((aoi:4.961032124271364,(gup:3.9022801137521275,nuy:3.902280113752128):1.0587520105192358):31.38217105313197,ncm:36.34320317740333):6.433332707845821,fuy:42.77653588524915):1.0146744894038875,(kwe:1.1794265695403627,tmj:1.1794265695403627):42.61178380511268):2.7844219083941155):5.2280819482968255):15.661283468978546):14.490396888581401,(((((((((((((((abr:0.46444197993232195,aka:0.46444197993232195):0.5633255648298474,(any:0.6391409440915887,bci:0.6391409440915885):0.38862660067058075):0.2436650446592603,abu:1.2714325894214302):0.561974371292925,((ald:0.6990463056651414,avi:0.6990463056651414):0.6135504273959115,ati:1.312596733061052):0.5208102276533029):0.5177587019843288,(ewe:1.2840973061125966,fon:1.2840973061125966):1.0670683565860877):1.2735996905611193,((ada:0.563988390042134,gaa:0.563988390042134):2.1951192967548074,akp:2.759107686796942):0.8656576664628615):3.0536381904155316,(((bet:0.8489717831708872,bjw:0.8489717831708872):1.6642988520677258,((klu:0.9224728245319488,krn:0.9224728245319489):0.3344986406982883,krw:1.2569714652302368):1.2562991700083765):3.677134920779699,fll:6.1904055560183116):0.48799798765702285):1.1171881108808996,((((((afo:2.071377107144841,kad:2.071377107144841):0.44465802320000103,yer:2.5160351303448416):0.8550753457626326,((ahs:2.1814898186323273,kcg:2.1814898186323277):1.0215152777879188,bom:3.203005096420246):0.16810537968722805):3.5694913374180888,((((((((((((((asa:2.1440595678491405,((((cwe:0.9516863786815934,ruf:0.9516863786815934):0.4754632870548019,(gog:1.0967400232548612,(ksb:0.9314002577198425,(ngp:0.3820587489580922,ziw:0.3820587489580922):0.5493415087617498):0.16533976553501872):0.33040964248153415):0.06474256135439593,kki:1.491892227090791):0.5873116871187603,(((dig:0.557979232564092,(dug:0.3079031208855574,nyf:0.3079031208855574):0.2500761116785343):0.41088436296682573,pkb:0.9688635955309182):0.5629915300563566,swh:1.5318551255872745):0.5473487886222763):0.06485565363958967):0.6036658678836879,(((dav:0.603995418454356,old:0.603995418454356):1.195736421200348,((kam:0.5936549832892789,(kik:0.33063508479150416,soz:0.33063508479150416):0.2630198984977747):0.521060654752832,mer:1.114715638042111):0.6850162016125934):0.6169649386710587,((nym:0.7459339283260777,suk:0.7459339283260777):0.44223778738408104,suw:1.1881717157101588):1.2285250626156052):0.33102865740706555):0.41342653417416075,((((bez:0.4499925297741393,heh:0.4499925297741393):0.7655729682883272,sbp:1.2155654980624666):0.25967000536595175,(mgs:0.649537564818801,ngo:0.649537564818801):0.8256979386096174):1.5682078446196737,(((((bxk:1.1412229905997957,myx:1.1412229905997957):0.6563629693523765,(((((cgg:0.3512410580801238,nyn:0.3512410580801238):0.27183836011208123,(nyo:0.34994863273157356,ttj:0.34994863273157356):0.27313078546063174):0.20674278446447214,hay:0.8298222026566773):0.40668340354596566,(ked:0.7965396979694674,zin:0.7965396979694673):0.43996590823317616):0.19668676554903097,(lug:0.9292514994219777,xog:0.9292514994219777):0.5039408723296956):0.3643935882004983):0.18485950713407195,(guz:1.622293900930882,reg:1.622293900930882):0.3601515661553625):0.35964413234640413,((((haq:0.6546065821914486,kin:0.6546065821914488):0.2562840515255431,run:0.9108906337169923):0.3452326392373336,(hke:0.5606085679613281,shr:0.5606085679613281):0.6955147049929976):0.5038640670040138,koo:1.7599873399583388):0.5821022594743102):0.17204401479462383,ida:2.5141336142272723):0.5293097338208193):0.11770862185889763):0.5213663299761206,(((((((bdp:0.7000892153579935,(mwn:0.31618460951786526,piw:0.31618460951786526):0.3839046058401285):0.19617395567255402,(fip:0.5391574766160402,mgr:0.5391574766160402):0.3571056944145068):0.30308558037628885,sbk:1.1993487514068366):0.439753292667056,nyy:1.6391020440738922):0.5825368791776986,rim:2.2216389232515907):1.1541989354478965,(kde:3.0221754899357824,((lag:0.8738970690995804,mgz:0.8738970690995804):2.0372059301437546,yao:2.911102999243335):0.11107249069244718):0.3536623687637048):0.1768969434461174,((((cce:1.5612787126837229,((((nde:0.4561874041327831,zul:0.45618740413278236):0.15389615754251434,xho:0.6100835616752963):0.21442874681496538,ssw:0.8245123084902617):0.20281253761683393,tso:1.0273248461070963):0.5339538665766275):0.4039057611336092,(((((loz:0.7557627698589766,sot:0.7557627698589766):0.207033007801407,nso:0.9627957776603836):0.12462480492867367,tsn:1.087420582589057):0.5047295797059272,vmw:1.5921501622949843):0.13804563488532495,ven:1.7301957971803097):0.23498867663702283):0.7374435560630705,(ndc:2.143894969885082,sna:2.1438949698850815):0.5587330599953209):0.1980829528007524,((ilb:0.567873040098685,toi:0.567873040098685):1.8327191203836364,((kdn:1.069532443597564,seh:1.0695324435975635):0.0256424806311919,nya:1.095174924228756):1.3054172362535645):0.5001188221988353):0.652023819464449):0.12978349773750564):0.148834349526207,((((bem:0.5449806196018545,tap:0.5449806196018545):0.642436617867029,(lam:0.3096439980617283,leb:0.3096439980617283):0.8777732394071551):0.7891348352919731,tum:1.9765520727608563):0.41523269564520215,tog:2.3917847684060582):1.439567881003259):0.2638748752831952,((byi:0.885692186418999,sod:0.885692186418999):1.255673711147244,lea:2.141365897566244):1.953861627126269):0.7444812730982164,((bcp:2.1048204383438147,((((bip:0.25001814046427134,kzy:0.25001814046427134):0.4401433348234002,kmw:0.6901614752876712):0.5411705142455905,brf:1.2313319895332615):0.3869344378668962,rwm:1.6182664274001581):0.4865540109436566):0.9871584101195867,buu:3.091978848463402):1.7477299493273284):0.10538881917071041,((((axk:3.11895114295723,ebo:3.1189511429572305):0.8706260394773411,(((khy:0.40254936434010113,pof:0.40254936434010113):0.8322118487812009,zms:1.2347612131213022):2.187559268666474,((mdp:0.3696364369776043,shc:0.3696364369776043):0.8285455347962573,pem:1.198181971773862):2.2241385100139155):0.5672567006467948):0.28796122913195354,(((bja:0.6479853875071202,lin:0.6479853875071202):1.0346593356254972,(lse:0.6868807188123817,ngc:0.6868807188123813):0.9957640043202366):1.1959696147671812,(((((buf:0.2277022526136183,lel:0.2277022526136183):0.5036822426500128,skt:0.7313844952636311):0.5366276168541677,(kel:0.6986295041259494,tll:0.6986295041259492):0.5693826079918499):0.559308609884116,ksv:1.8273207220019152):0.3869478342300243,(lal:0.8418862877034206,lol:0.8418862877034206):1.372382268528519):0.6643457816678588):1.398924073666726):0.12948822608470056,(((((((cjk:1.1017430751849433,lue:1.1017430751849433):0.4770081320830626,(lch:1.0344028513069319,lum:1.0344028513069319):0.5443483559610751):0.5036567282779234,lun:2.0824079355459295):0.5091737030570673,((her:0.9042794687205393,ndo:0.9042794687205393):0.7271082366822703,((khu:0.5481656628577489,umb:0.5481656628577488):0.33313681899210634,nyk:0.8813024818498555):0.750085223552955):0.9601939332001868):1.205643422939199,(smd:2.5242399073061343,yom:2.524239907306134):1.2729851542360624):0.03958463578026317,(((diz:0.3724447653968149,yns:0.3724447653968149):0.9794139859211901,(soo:0.5135389510885131,zmp:0.5135389510885131):0.8383198002294916):1.0769349705439497,((kwy:0.8942042368749618,sdj:0.8942042368749618):0.7057611164742496,(sub:1.0415251746260916,yaf:1.0415251746260916):0.5584401787231195):0.8288283685127427):1.408015975460505):0.4754141728257646,((((kqn:0.44047854637504263,sng:0.44047854637504263):0.4486411227798333,lub:0.8891196691548755):0.548909623607976,lua:1.438029292762852):0.8157024745879247,sop:2.2537317673507764):2.0584921027974485):0.0948027675030012):0.5380709793102136):0.03593970315862283,(bvb:1.7960751654204752,tvu:1.7960751654204752):3.1849621546995888):0.006907613183638972,(((((((bdu:1.586654262194082,bri:1.586654262194082):0.817916850404518,(bnm:1.93502746253074,dua:1.93502746253074):0.4695436500678596):0.2393033651508576,fan:2.643874477749457):0.33390837592573996,ksf:2.9777828536751962):0.4426936502661061,(bmw:2.3484187232463123,(njy:2.143428789324557,nmg:2.1434287893245574):0.2049899339217549):1.0720577806949896):0.09585838125744406,(bkh:2.798444585129814,(mye:1.7277809646588447,tsv:1.7277809646588447):1.0706636204709694):0.7178903000689325):0.023066482691382895,koq:3.539401367890129):1.4485435654135728):1.0190901743444822,(((((bax:0.4350081086027823,mhk:0.4350081086027823):0.4712208048098001,(bfd:0.6745049369293953,lmp:0.6745049369293952):0.23172397648318732):0.21642997789212548,(bko:0.5106050456176672,fmp:0.5106050456176672):0.6120538456870408):0.6219912005098576,mgo:1.7446500918145653):1.4017509917898865,((bfm:0.5759791158017548,bkm:0.5759791158017548):0.7574232954552312,lns:1.3334024112569864):1.812998672347466):2.8606340240437325):0.19929334593170545,(bky:3.2753046200911284,ken:3.275304620091129):2.93102383348876):0.2199395679291074,((brt:0.6754457124716922,tiv:0.6754457124716922):2.5872437097907808,etu:3.2626894222624725):3.163578599246524):0.1909293064699753,((ccg:0.9040127507381702,tik:0.9040127507381702):2.976121556312634,((mcu:0.7469737368323663,vut:0.7469737368323663):0.6580868840059386,ndr:1.405060620838305):2.475073686212499):2.7370630209281677):0.3234044855465905):0.23332676880400083,((efi:0.7529312216652164,ibb:0.7529312216652164):1.2719621742474378,yaz:2.024893395912655):5.149035186416909):0.0922765275153159,((((((((bin:0.49608477774636695,ets:0.49608477774636695):0.358749751301564,iso:0.854834529047931):1.1891692671242313,ibo:2.044003796172162):1.1602356544907795,((gby:0.4733949007025892,nup:0.4733949007025892):0.6201492324259008,igb:1.0935441331284907):2.110695317534451):0.7383094397215113,(ich:1.6951237642556622,((jbu:0.4287754291512131,jib:0.4287754291512131):0.5001464990060268,nza:0.9289219281572401):0.766201836098422):2.2474251261287908):0.5382497954121424,(((ife:0.41565466952566166,yor:0.41565466952566166):0.5167767414976719,its:0.932431411023333):0.7007699853294552,igl:1.6332013963527883):2.8475972894438075):0.5614728187918105,(((bzw:1.052292033598879,(cch:0.6537974795445833,((grh:0.18467020299066683,krh:0.18467020299066683):0.2262053627070395,nar:0.41087556569770683):0.24292191384687672):0.39849455405429557):0.6502337631016555,(cdr:1.0325458723570866,dri:1.0325458723570864):0.6699799243434477):0.7473706294213975,res:2.449896426121932):2.592375078466474):0.4669224995457366,idu:5.509194004134143):1.7570111057107365):0.5293865447113557):0.03329111559818898,(((((((bbp:1.0819805196441503,zmz:1.0819805196441503):1.4039337716352283,(brm:1.1999547330804095,zne:1.1999547330804095):1.2859595581989691):0.5244586519563805,((bkc:1.6014827208028493,nbm:1.601482720802849):0.6538430964283208,ngb:2.25532581723117):0.7550471260045897):0.9367622199675614,((((dow:0.8744943644881429,ver:0.8744943644881427):0.1222833176914403,ndi:0.9967776821795832):0.5976141847439574,mzm:1.59439186692354):1.2046688690175282,(((lak:1.338056569570649,mua:1.338056569570649):0.7361600705908518,tui:2.0742166401615005):0.047898029329358494,mdd:2.122114669490859):0.6769460664502103):1.1480744272622534):0.6484800210265917,(gya:1.8800423694069572,mzv:1.8800423694069572):2.7155728148229556):1.855843795802353,(myk:1.286461584557198,sef:1.286461584557198):5.164997395475069):0.22694505897730366,(((((((((bfo:0.9984548585840526,(gur:0.3271494686034037,mos:0.3271494686034037):0.6713053899806491):0.3491210349050905,(biv:1.1664281760178885,dga:1.1664281760178878):0.1811477174712557):0.14208137263161924,((dag:0.4610051246990555,maw:0.4610051246990555):0.3583226956975557,kus:0.8193278203966118):0.6703294457241503):0.3005650136807989,(bud:0.9683654057265514,((gux:0.2775592565466362,mfq:0.2775592565466362):0.2101377740015415,xon:0.4876970305481774):0.48066837517837396):0.8218568740750103):0.4404584283805797,tbz:2.2306807081821414):0.486408789709583,bwu:2.717089497891725):0.7950732785854702,(lnu:1.1599815090866163,vor:1.1599815090866163):2.352181267390579):0.4519808075584675,(dos:2.724459044112953,((dya:0.8446958966702848,lob:0.8446958966702848):1.6613378988371121,((((kbp:0.4668069357008843,kdh:0.4668069357008843):0.605308584074107,(sil:0.6865089185123592,vag:0.6865089185123592):0.3856066012626317):0.5481089944701247,nnw:1.6202245142451164):0.05224589723965001,xsm:1.6724704114847657):0.8335633840226309):0.21842524860555645):1.23968453992271):0.7707834350484926,nku:4.7349270190841555):1.9434770199254157):1.1504787311448537):0.23111044769837719,((((((bab:1.0332861511620874,wol:1.0332861511620872):0.6968361942058217,bif:1.7301223453679093):2.769951034471994,((fub:3.454183989712244,((fuc:0.7470756208557836,fuf:0.7470756208557836):2.2969036797786773,(fuh:1.773903749233223,fuv:1.773903749233223):1.2700755514012387):0.4102046890777826):0.5013790328804251,srr:3.9555630225926692):0.5445103572472343):0.08644618316303188,(bsc:1.3556724764574732,cou:1.3556724764574732):3.2308470865454626):0.4074246019525285,(bjg:2.2853502880489533,(ble:1.0635220382450787,(dyo:0.8702519940510536,pbo:0.8702519940510539):0.19327004419402471):1.2218282498038755):2.7085938769065097):0.4899411561753224,(((bgo:0.7021350077164331,tem:0.7021350077164331):1.5599454771180914,gol:2.262080484834524):1.074560829173036,(bun:0.7626080489418987,kqs:0.7626080489418987):2.5740332650656605):2.1472440071232253):2.576107896722016):5.37583607822855,ijn:13.435829296081351):29.442145015905254,((((((((((ach:1.6636235770068037,((alz:0.7103921442245368,luo:0.7103921442245368):0.8355732773753394,laj:1.5459654215998762):0.11765815540692759):0.797777752853696,((anu:1.3238588791136643,shk:1.3238588791136643):0.34396165575303916,lkr:1.6678205348667032):0.7935807949937972):0.28044976451783254,mfz:2.741851094378333):0.7030901960828841,(dik:1.580028376102672,nus:1.580028376102672):1.8649129143585457):1.2962701245535468,((((bfa:1.6470751344116306,keo:1.6470751344116303):0.06291093169040463,mqu:1.7099860661020354):1.2243387561291064,((((kdj:0.6592906439872369,toq:0.6592906439872369):0.3026449464886871,tuv:0.9619355904759253):0.5252472036919522,teo:1.4871827941678766):0.8128790358405023,(lot:1.4601427739843182,(mas:0.5634115360251051,saq:0.5634115360251051):0.8967312379592128):0.8399190560240604):0.6342629922227618):0.8672647794609887,((((((eyo:0.20219254649561055,niq:0.20219254649561055):0.2713841590476307,sgc:0.47357670554324066):0.44262287994313254,oki:0.9161995854863738):0.24641808392674014,pko:1.1626176694131143):0.08060769796641454,kpz:1.2432253673795284):0.6917349377833386,tcc:1.9349603051628674):1.8666292965292628):0.939621813322634):15.325292237462278,she:20.066503652477042):4.2344853276740615,tbi:24.300988980151104):9.77081352472906,((((bst:1.0144729328549393,mdy:1.014472932854939):0.22087240625426863,doz:1.235345339109208):0.7675743950045204,kqy:2.002919734113729):1.9313521151343997,(jnj:2.58456644775396,(kbr:0.7131590061154467,myo:0.7131590061154467):1.8714074416385142):1.3497054014941687):30.137530655632034):6.593315139576156,(((((dil:1.087934511822677,xnz:1.087934511822677):0.5111122306703082,mei:1.5990467424929862):26.325918229039665,(kgo:0.9791277738241854,tey:0.9791277738241854):26.945837197708467):1.6589981642924805,(fuj:4.566291161981741,((kib:1.2967359700123575,otr:1.2967359700123575):1.5469044270834829,(mor:1.278977658896242,tic:1.278977658896242):1.5646627381995981):1.7226507648859006):25.01767197384339):0.47102005769061606,jle:30.05498319351575):10.61013445094057):1.8132755911021903,((((bex:4.633927172663549,(bmi:1.239088996121111,mwm:1.239088996121111):3.394838176542439):0.5196419392777853,bot:5.1535691119413345):2.3411677482911823,((((efe:1.0515856084091593,les:1.0515856084091593):1.4124303520284114,mdi:2.46401596043757):3.1660120829331206,(led:3.127775202309424,(lmi:1.0770690562179395,mdj:1.0770690562179395):2.0507061460914837):2.5022528410612668):0.1870432469821406,((lgg:0.8613396059808689,log:0.8613396059808689):1.6561360437388783,(mgd:2.1152345743919847,mhi:2.1152345743919847):0.4022410753277623):3.2995956406330844):1.6776655698796858):12.723206477213669,(((did:1.2817446408368929,suq:1.2817446408368929):0.4456643645045184,mym:1.7274090053414115):16.869686519328614,xom:18.597095524670024):1.6208478127761623):22.260449898112324):0.3995810764280989):1.1411100284684181,(((((((((((bam:0.9344263970535749,dyu:0.9344263970535749):0.6017459744221892,mlq:1.5361723714757645):0.2116583801448937,kao:1.7478307516206582):0.3735763321029737,knk:2.121407083723632):0.4433210025336147,vai:2.564728086257247):0.3408906353899699,(sus:0.9608644298104017,yal:0.9608644298104017):1.9447542918368153):0.49141110566428114,(((bza:0.4379393199049468,men:0.4379393199049468):0.4918593663019339,tod:0.9297986862068817):0.8747084509836203,xpe:1.8045071371905024):1.5925226901209955):0.8326393782158665,(bbo:2.90601141836193,(boz:1.9051770687950655,(bze:1.731013160749206,snk:1.7310131607492059):0.17416390804585946):1.0008343495668643):1.323657787165434):0.7979177184897281,((bib:1.0207379506895236,sbd:1.0207379506895236):2.3068765444007555,(((dnj:0.4871574467234403,neb:0.4871574467234403):0.2876543878673201,goa:0.774811834590761):0.9615816521779393,ggu:1.7363934867686999):1.5912210083215796):1.699972428926813):2.334132958185762,dbw:7.361719882202855):0.6252122796833266,(dje:1.133163187520716,hmb:1.133163187520716):6.853768974365465):36.03215217856884):4.487095784227641,((((((aiw:2.0400001362849447,amf:2.0400001362849447):2.5364499566435468,dim:4.576450092928492):3.6250324573739334,kun:8.201482550302424):3.2249307332544674,nrb:11.426413283556892):21.455341236559605,(((dzg:0.6368692936963315,tuq:0.6368692936963315):0.9800177275649767,(kbl:0.8346170572024171,kby:0.8346170572024171):0.7822699640588917):27.573178066290346,hoz:29.190065087551655):3.691689432564843):0.8539594787531897,(fvr:10.299739498731968,nyi:10.299739498731968):23.435974500137718):14.77046612581298):1.6065013168047244,(((((((gwj:0.2851611893531267,nhr:0.2851611893531267):0.4365312143488906,xuu:0.7216924037020178):0.3735662848457384,tyu:1.0952586885477558):0.39252003759304377,(hgm:0.8908222920643692,naq:0.8908222920643691):0.5969564340764307):5.574277441066486,(ktz:1.4163928465220965,oun:1.4163928465220965):5.645663320685189):0.721108137787347,(((ngh:1.9960687439489369,xeg:1.9960687439489369):1.1708931398164633,xam:3.1669618837654006):1.4483165369819169,nmn:4.615278420747316):3.1678858842473154):7.219512047310703,(hts:7.55500879196117,sad:7.55500879196117):7.447667560344165):35.11000508918205):31.84271314741654);";

	
	@Override
	public void run() throws Exception {
		long start = System.currentTimeMillis();
        Log.warning("Do not use BEAGLE with CorrelatedSubstitutionModel: setting java.only=true");
        System.setProperty("java.only", "true");

        indices = new String[16];
		indices[0] = "0 1 2 1 3 0 3 2";

		indices[1] = "0 1 2 1 3 0 4 2";
		indices[2] = "0 1 2 1 3 0 3 4";
		indices[4] = "0 1 2 4 3 0 3 2";
		indices[8] = "0 1 2 1 3 4 3 2";

		indices[3] = "0 1 2 1 3 0 4 5";
		indices[5] = "0 1 2 4 3 0 5 2";
		indices[6] = "0 1 2 3 4 0 4 5";
		indices[9] = "0 1 2 1 3 4 5 2";
		indices[10] = "0 1 2 1 3 4 3 5";
		indices[12] = "0 1 2 3 4 5 4 2";

		indices[7] = "0 1 2 3 4 0 5 6";
		indices[11] = "0 1 2 1 3 4 5 6";
		indices[13] = "0 1 2 3 4 5 6 2";
		indices[14] = "0 1 2 3 4 5 4 6";

		indices[15] = "0 1 2 3 4 5 6 7";

		ml = new double[16];
		df = new double[16];

		int threadCount = threadCountInput.get();
		if (threadCount == 1) {
			for (int i = 0; i < 16; i++) {
				Log.warning("Processing model " + i + ": " + indices[i]);
				NS NS = buildModel(indices[i]);
				NS.run();
				ml[i] = NS.getMarginalLikelihood();
				df[i] = NS.getStandardDeviation();
			}
		} else {
		    exec = Executors.newFixedThreadPool(threadCount);
			countDown = new CountDownLatch(16);
			// kick off the threads
			for (int i = 0; i < 16; i++) {
				CoreRunnable coreRunnable = new CoreRunnable(i);
				exec.execute(coreRunnable);
			}
			countDown.await();
		}

//		ml = new double[] { -711.8 , -702.5 , -709.6 , -703.3 , -699.6 , -696.2 , -705.0 , -709.8 , -704.9 , -720.0 , -702.9 , -706.5 , -707.1 , -702.1 , -698.7 , -711.5};
		reportStats();		
		
		PrintStream out = System.out;
		if (outputInput.get() != null) {
			out = new PrintStream(outputInput.get());
			Log.info("\nOutput written to " + outputInput.get().toPath() +"\n");
		}
		String dot = toDot(ml, df);
		out.print(dot);

		long end = System.currentTimeMillis();
		Log.warning("Total time spent: " + (end - start) / 1000 + " seconds");
		
		Log.warning("All done!");

	}

	private void reportStats() {
		Log.info("");
		Log.info("model  : indices        : marginal likelihood (standard deviation)");
		for (int i = 0; i < 16; i++) {
			String bin = Integer.toBinaryString(i);
			while (bin.length() < 4) {
				bin = "0" + bin;
			}
			Log.info((i < 10 ? " ":"") + i + " " + bin + ": " + indices[i] + " : " + format.format(ml[i]) + " (" + format.format(df[i]) + ")");
		}		
		Log.info("");
		Log.info("rate    : P(equal) P(different)");
		
		odds(1, "?0 -> ?1");
		odds(2, "0? -> 1?");
		odds(3, "?1 -> ?0");
		odds(4, "1? -> 0?");		
		
		Log.info("");
		Log.info("value: count");
		Log.info("00   : " + siteCount[0]);
		Log.info("01   : " + siteCount[1]);
		Log.info("10   : " + siteCount[2]);
		Log.info("11   : " + siteCount[3]);
	}

	private void odds(int rate, String label) {
		double max = ml[0];
		for (int j = 0; j < 16; j++) {
			max = Math.max(ml[j], max);
		}
		int [] isOn = new int[16];
		switch (rate) {
		case 1: isOn = new int[]{0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1};break;
		case 2: isOn = new int[]{0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1};break;
		case 3: isOn = new int[]{0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1};break;
		case 4: isOn = new int[]{0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1};break;
		}
		double [] p = new double[2];
		for (int j = 0; j < 16; j++) {
			p[isOn[j]] += Math.exp(ml[j] - max);
		}
		double sum = (p[0] + p[1]) / 100.0;
		p[0] /= sum;
		p[1] /= sum;
		Log.info(label + ": " + 
				"      ".substring(format.format(p[0]).length()) + format.format(p[0]) + "%" + 
				"          ".substring(format.format(p[1]).length()) + format.format(p[1]) + "%");
	}




	class CoreRunnable implements java.lang.Runnable {
		int i;

		CoreRunnable(int i) {
			this.i = i;
		}

		@Override
		public void run() {
			try {
				Log.warning("Processing model " + i + ": " + indices[i]);
				NS NS = buildModel(indices[i]);
				NS.run();
				ml[i] = NS.getMarginalLikelihood();
				df[i] = NS.getStandardDeviation();
			} catch (Exception e) {
				e.printStackTrace();
			}
			countDown.countDown();
		}

	} // CoreRunnable

	private String toDot(double[] ml, double[] df) {
		String dot = "digraph {\n" + " graph [mindist=0.0, nodesep=0.25, ranksep=0.4]\n"
				+ "; node [fontsize=\"12\", style=\"solid\", color=\"#0000FF60\", width=0.95, height=0.75, fixedsize=\"true\",color=\"#FFFFFF\"];\n"
				+ " \n" + "\n" + "0 -> 1;\n" + "0 -> 2;\n" + "0 -> 4;\n" + "0 -> 8;\n" + "\n" + "1 -> 3;\n"
				+ "1 -> 5;\n" + "1 -> 9;\n" + "2 -> 3;\n" + "2 -> 6;\n" + "2 -> 10;\n" + "4 -> 5;\n" + "4 -> 6;\n"
				+ "4 -> 12;\n" + "8 -> 9;\n" + "8 -> 10;\n" + "8 -> 12;\n" + "\n" + "3 -> 7;\n" + "3 -> 11;\n"
				+ "5 -> 7;\n" + "5 -> 13;\n" + "6 -> 7;\n" + "6 -> 14;\n" + "9 -> 11;\n" + "9 -> 13;\n" + "10 -> 11;\n"
				+ "10 -> 14;\n" + "12 -> 13;\n" + "12 -> 14;\n" + "\n" + "7 -> 15;\n" + "11 -> 15;\n" + "13 -> 15;\n"
				+ "14 -> 15;\n" + "\n";
		for (int i = 0; i < 16; i++) {
			String bin = Integer.toBinaryString(i);
			while (bin.length() < 4) {
				bin = "0" + bin;
			}
			dot += i + " [label=\"" + bin + "\\n" + format.format(ml[i]) + " (" + format.format(df[i]) + ")\"]\n";
		}
		dot += "\n" + "\n" + "}\n";
		return dot;
	}

	private NS buildModel(String indexValues) throws IOException, SAXException, ParserConfigurationException, XMLParserException {
		if (xmlFileInput.get() != null && !xmlFileInput.get().equals("[[none]]")) {
			return buildModelFromFile(indexValues);
		}
		if (useRelaxedClockInput.get()) {
			return buildModelRelaxed(indexValues);
		} else {
			return buildModelStrict(indexValues);
		}
	}
	
	private NS buildModelFromFile(String indexValues) throws SAXException, IOException, ParserConfigurationException, XMLParserException {
		XMLParser parser = new XMLParser();
		Object o = parser.parseFile(xmlFileInput.get());
		if (!(o instanceof NS)) {
			throw new IllegalArgumentException("Expected the run element to be of type NS");
		}
		NS ns = (NS) o;
		IntegerParameter indices = getIndicesObject(ns);
		if (indices == null) {
			throw new IllegalArgumentException("Expected element with id=\"indices\" in XML, but could not find any");
		}
		indices.valuesInput.setValue(indexValues, indices);
		indices.initAndValidate();
		return ns;
	}

	private IntegerParameter getIndicesObject(BEASTInterface o) {
		for (BEASTInterface bi : o.listActiveBEASTObjects()) {
			if (bi.getID().equals("indices")) {
				if (bi instanceof IntegerParameter) {
					return (IntegerParameter) bi;
				} else {
					throw new IllegalArgumentException("Element with id=\"indices\" is not an IntegerParameter");
				}
			} else {
				IntegerParameter result = getIndicesObject(bi);
				if (result != null) {
					return result;
				}
			}
		}
		return null;
	}

	private NS buildModelStrict(String indexValues) throws IOException {
		TreeParser tree = new TreeParser(null, newick, 0, false);

		Alignment data = processDataFile(tree.getTaxaNames());
		CompoundAlignment characters = new CompoundAlignment(data);

		// <run id="mcmc" spec="beast.gss.NS" chainLength="50000" preBurnin="5"
		// particleCount="1" subChainLength="100">

		// <state id="state" storeEvery="100">
		//
		// <stateNode spec="beast.core.parameter.RealParameter" id="parameters"
		// lower="0.05">
		// 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0
		// </stateNode>
		RealParameter parameters = new RealParameter("1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0");
		parameters.setBounds(0.05, 8.0);
		parameters.setID("parameters");
		// <stateNode spec="beast.core.parameter.IntegerParameter" id="indices"
		// lower="0" upper="2">
		// 0 1 2 3 4 5 6 7
		// </stateNode>
		IntegerParameter indices = new IntegerParameter(indexValues);
		indices.setID("indices");
		// <stateNode spec="beast.core.parameter.IntegerParameter" id="sizes">
		// 1 1 1 1 1 1 1 1
		// </stateNode>
		IntegerParameter sizes = new IntegerParameter("1 1 1 1 1 1 1 1");
		sizes.setID("sizes");
		// <parameter id="frequencies" name="stateNode" lower="0" upper="1"
		// value="0.25 0.25 0.25 0.25"/>
		RealParameter frequencies = new RealParameter("0.25 0.25 0.25 0.25");
		frequencies.setID("frequencies");
		// <stateNode idref="clockRate.c:dplace"/>
		RealParameter clockRate = new RealParameter("0.5");
		clockRate.setUpper(1.0);
		clockRate.setID("clockRate");
		// </state>

		State state = new State();
		state.initByName("stateNode", parameters,
				// "stateNode", indices,
				"stateNode", sizes,
				// "stateNode",frequencies,
				"stateNode", clockRate);

		// <operator id="DeltaExchanger" spec="DeltaExchangeOperator"
		// weight="1">
		// <parameter name="weightvector" idref="sizes" />
		// <parameter name="parameter" idref="parameters" />
		// </operator>

		DeltaExchangeOperator deltaExchanger = new DeltaExchangeOperator();
		deltaExchanger.initByName("weightvector", sizes, "parameter", parameters, "autoOptimize", false, "weight", 1.0);
		//
		// <operator id="clockRateScaler.t:dna" spec="ScaleOperator"
		// scaleFactor="0.9" parameter="@clockRate.c:dplace" weight="0.1"/>
		ScaleOperator clockRateScaler = new ScaleOperator();
		clockRateScaler.initByName("scaleFactor", 0.9, "weight", 0.1, "parameter", clockRate);

		List<Operator> operators = new ArrayList<>();
		operators.add(deltaExchanger);
		operators.add(clockRateScaler);
		//
		// <distribution id="posterior" spec="CompoundDistribution">
		// <distribution id="prior" spec="CompoundDistribution">
		// <distribution id="rates_prior" spec="beast.math.distributions.Prior"
		// x="@parameters">
		// <distr spec="tsa.parameterclone.helpers.RescaledDirichlet">
		// <!-- Use a flat distribution -->
		// <parameter name="sizes" idref="sizes" />
		// </distr>
		RescaledDirichlet rescaledDirichlet = new RescaledDirichlet(sizes);
		// </distribution>
		Prior ratesPrior = new Prior();
		ratesPrior.initByName("x", parameters, "distr", rescaledDirichlet);
		// </distribution>
		CompoundDistribution prior = new CompoundDistribution();
		prior.initByName("distribution", ratesPrior);
		prior.setID("prior");
		// <distribution id="likelihood" spec="CompoundDistribution">
		// <distribution id="treeSetLikelihood.dplace"
		// spec="beast.evolution.likelihood.ThreadedTreeSetLikelihood"
		// treeSetFile="/Users/remco/data/beast/global/scripts/gen/dplace-data/geo-rc/combined/geo-rc1197+almostnewwals+corrcals11.tree"
		// burnin="0">
		// <treeLikelihood id="treelk" spec="AncestralStateTreeLikelihood"
		// tree="@tree" data="@characters" tag="dplace">
		// <siteModel id="sitemodel" spec="SiteModel">
		// <substModel id="subst"
		// spec="tsa.correlatedcharacters.polycharacter.CorrelatedSubstitutionModel"
		// shape="2 2" alignment="@characters">
		// <rates id="actual_rates" spec="tsa.parameterclone.selector.Selector">
		// <groupings idref="indices" />
		// <parameters idref="parameters" />
		// <entry spec="beast.core.parameter.IntegerParameter">0 1 2 3 4 5 6 7
		// </entry>
		// </rates>
		Selector rates = new Selector(indices, parameters, new IntegerParameter("0 1 2 3 4 5 6 7"));
		// <frequencies name="frequencies" id="freqs"
		// spec="Frequencies" estimate="false" frequencies="@frequencies" />
		Frequencies freqs = new Frequencies();
		freqs.initByName("frequencies", frequencies);
		// </substModel>
		CorrelatedSubstitutionModel substModel = new CorrelatedSubstitutionModel(new IntegerParameter("2 2"),
				characters, rates, freqs);
		// </siteModel>
		SiteModel siteModel = new SiteModel();
		siteModel.initByName("substModel", substModel);
		// <branchRateModel id="StrictClockModel.c:dplace"
		// spec="beast.evolution.branchratemodel.StrictClockModel">
		// <parameter id="clockRate.c:dplace" estimate="true" name="clock.rate"
		// upper="1.0">0.5</parameter>
		// </branchRateModel>
		StrictClockModel clockModel = new StrictClockModel();
		clockModel.initByName("clock.rate", clockRate);
		// </treeLikelihood>
//		AncestralStateTreeLikelihood ancestralStateTreeLikelihood = new AncestralStateTreeLikelihood();
//		ancestralStateTreeLikelihood.initByName("branchRateModel", clockModel, "tree", tree, "data", characters, "tag",
//				"dplace", "siteModel", siteModel, "useJava", true);
		TreeLikelihood ancestralStateTreeLikelihood = new TreeLikelihood();
		ancestralStateTreeLikelihood.initByName("branchRateModel", clockModel, "tree", tree, "data", characters, "siteModel", siteModel);
		// </distribution>
		CompoundDistribution likelihood = new CompoundDistribution();
		likelihood.setID("likelihood");
		if (treeSetFileInput.get() != null) {
			ThreadedTreeSetLikelihood treeLikelihood = new ThreadedTreeSetLikelihood(ancestralStateTreeLikelihood, treeSetFileInput.get(), 0);
		// </distribution>
			likelihood.initByName("distribution", treeLikelihood);
		} else {
			likelihood.initByName("distribution", ancestralStateTreeLikelihood);
		}
		// </distribution>
		CompoundDistribution distribution = new CompoundDistribution();
		distribution.initByName("distribution", prior, "distribution", likelihood);
		distribution.setID("posterior");

		NS ns = new NS(5000 * particleCountInput.get(), 0, particleCountInput.get(), subChainLengthInput.get(), state, operators, distribution,
				epsilonInput.get());
		return ns;
	}

	private NS buildModelRelaxed(String indexValues) throws IOException {
		TreeParser tree = new TreeParser(null, newick, 0, false);

		Alignment data = processDataFile(tree.getTaxaNames());
		CompoundAlignment characters = new CompoundAlignment(data);

		RealParameter parameters = new RealParameter("1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0");
		parameters.setBounds(0.05, 8.0);
		parameters.setID("parameters");

		IntegerParameter indices = new IntegerParameter(indexValues);
		indices.setID("indices");

		IntegerParameter sizes = new IntegerParameter("1 1 1 1 1 1 1 1");
		sizes.setID("sizes");

		RealParameter frequencies = new RealParameter("0.25 0.25 0.25 0.25");
		frequencies.setID("frequencies");

		RealParameter clockRate = new RealParameter("0.5");
		clockRate.setUpper(1.0);
		clockRate.setID("clockRate");

		RealParameter ucldStdev = new RealParameter("0.5");
		ucldStdev.setUpper(2.0);
		ucldStdev.setID("ucldStdev");
		
		IntegerParameter rateCategories = new IntegerParameter("1 1 1 1");
		rateCategories.setID("rateCategories");

		State state = new State();
		state.initByName("stateNode", parameters,
				"stateNode", ucldStdev,
				"stateNode", sizes,
				"stateNode",rateCategories,
				"stateNode", clockRate);

		DeltaExchangeOperator deltaExchanger = new DeltaExchangeOperator();
		deltaExchanger.initByName("weightvector", sizes, "parameter", parameters, "autoOptimize", false, "weight", 1.0);

		ScaleOperator clockRateScaler = new ScaleOperator();
		clockRateScaler.initByName("scaleFactor", 0.9, "weight", 0.1, "parameter", clockRate);


	    ScaleOperator stdDevScaler = new ScaleOperator();
		stdDevScaler.initByName("scaleFactor", 0.5, "weight", 0.1, "parameter", ucldStdev);		
		IntRandomWalkOperator categoriesRandomWalk = new IntRandomWalkOperator();
		categoriesRandomWalk.initByName("parameter", rateCategories, "weight", 1.0, "windowSize", 1);
		SwapOperator categoriesSwapOperator = new SwapOperator();
		categoriesSwapOperator.initByName("intparameter", rateCategories, "weight", 1.0);
		UniformOperator categoriesUniform = new UniformOperator();
		categoriesUniform.initByName("parameter", rateCategories, "weight", 1.0);
		
		List<Operator> operators = new ArrayList<>();
		operators.add(deltaExchanger);
		operators.add(clockRateScaler);
		operators.add(stdDevScaler);
		operators.add(categoriesRandomWalk);
		operators.add(categoriesSwapOperator);
		operators.add(categoriesUniform);


		RescaledDirichlet rescaledDirichlet = new RescaledDirichlet(sizes);

		Gamma gamma = new Gamma();
		gamma.initByName("alpha", "0.5396", "beta", "0.3819");
		Prior ucldStdevPrior = new Prior();
		ucldStdevPrior.initByName("x", ucldStdev, "distr", gamma);
		
		Prior ratesPrior = new Prior();		
		ratesPrior.initByName("x", parameters, "distr", rescaledDirichlet);

		CompoundDistribution prior = new CompoundDistribution();
		prior.initByName("distribution", ratesPrior, "distribution", ucldStdevPrior);
		prior.setID("prior");

		Selector rates = new Selector(indices, parameters, new IntegerParameter("0 1 2 3 4 5 6 7"));

		Frequencies freqs = new Frequencies();
		freqs.initByName("frequencies", frequencies);

		CorrelatedSubstitutionModel substModel = new CorrelatedSubstitutionModel(new IntegerParameter("2 2"),
				characters, rates, freqs);

		SiteModel siteModel = new SiteModel();
		siteModel.initByName("substModel", substModel);

		
		LogNormalDistributionModel lognormal = new LogNormalDistributionModel();
		lognormal.initByName("S", ucldStdev, "M", "1.0", "meanInRealSpace", true);		
		UCRelaxedClockModel clockModel = new UCRelaxedClockModel();
		clockModel.initByName("clock.rate", clockRate, "rateCategories", rateCategories, "tree", tree, "distr", lognormal);

		AncestralStateTreeLikelihood ancestralStateTreeLikelihood = new AncestralStateTreeLikelihood();
		ancestralStateTreeLikelihood.initByName("branchRateModel", clockModel, "tree", tree, "data", characters, "tag",
				"dplace", "siteModel", siteModel ,"useJava", true);

		CompoundDistribution likelihood = new CompoundDistribution();
		likelihood.setID("likelihood");
		if (treeSetFileInput.get() != null) {
			ThreadedTreeSetLikelihood treeLikelihood = new ThreadedTreeSetLikelihood(ancestralStateTreeLikelihood, treeSetFileInput.get(), 0);
			likelihood.initByName("distribution", treeLikelihood);
		} else {
			likelihood.initByName("distribution", ancestralStateTreeLikelihood);
		}

		CompoundDistribution distribution = new CompoundDistribution();
		distribution.initByName("distribution", prior, "distribution", likelihood);
		distribution.setID("posterior");

		NS ns = new NS(5000 * particleCountInput.get(), 0, particleCountInput.get(), subChainLengthInput.get(), state, operators, distribution,
				epsilonInput.get());
		return ns;
	}

	/**
	 * convert file exported from DPLACE into an Alignment
	 * 
	 * @param taxaNames
	 **/
	private Alignment processDataFile(String[] taxaNames) throws IOException {
		BufferedReader fin = new BufferedReader(new FileReader(dataFileInput.get()));
		String str = null;
		// skip first line
		str = fin.readLine();

		// determine columns containing the data
		str = fin.readLine();
		String[] strs = str.split(",");
		int socIndex = -1;
		int v1Input = -1;
		int v2Input = -1;
		String code = codeInput.get();
		for (int i = 0; i < strs.length; i++) {
			if (strs[i].equals(code)) {
				if (socIndex < 0) {
					socIndex = i;
				} else {
					fin.close();
					throw new IllegalArgumentException("more than one " + code + " column found");
				}
			}
			if (strs[i].startsWith("Code: ")) {
				if (v1Input < 0) {
					v1Input = i;
				} else if (v2Input < 0) {
					v2Input = i;
				} else {
					fin.close();
					throw new IllegalArgumentException("Found more than 2 Code: columns, but expected 2");
				}
			}

		}
		if (socIndex < 0) {
			fin.close();
			throw new IllegalArgumentException("Could not find " + codeInput + " column");
		}
		if (v1Input < 0) {
			fin.close();
			throw new IllegalArgumentException("Could not find any Code: column");
		}
		if (v2Input < 0) {
			fin.close();
			throw new IllegalArgumentException("Could only find one Code: column, but expected 2");
		}

		// get data out of columns
		Map<String, String> map = new LinkedHashMap<>();
		for (String iso : taxaNames) {
			map.put(iso, "??");
		}
		
		boolean [] values1 = toBoolean(thresholdV1Input.get());
		boolean [] values2 = toBoolean(thresholdV2Input.get());
		
		while (fin.ready()) {
			str = fin.readLine();
			// remove qouted text
			str = str.replaceAll("\"[^\"]+\"", "");
			strs = str.split(",");
			String iso = strs[socIndex];
			if (iso.length() > 0) {
				String v1 = strs[v1Input];
				v1 = normalise(v1, values1);
				String v2 = strs[v2Input];
				v2 = normalise(v2, values2);
				String value = v1 + v2;
				// make sure that ambiguities are ignored
				if (v1.charAt(0)=='?' || v2.charAt(0)=='?') {
					value = "??";
				}
 				if (map.containsKey(iso)) {
					String value2 = map.get(iso);
					if (!value.equals(value2) && !value2.equals("??")) {
						Log.warning("Ambiguous value for " + iso + " (" + value + " & " + value2
								+ "). Setting value to \"??\"");
						map.put(iso, "??");
					} else {
						map.put(iso, value);
					}
				}
			}

		}
		fin.close();

		// convert to Alignment
		Alignment data = new Alignment();
		data.userDataTypeInput.setValue(new Binary(), data);
		List<Sequence> seqs = data.sequenceInput.get();
		int [] siteCount = new int[4];
		for (String iso : map.keySet()) {
			seqs.add(new Sequence(iso, map.get(iso)));
			switch(map.get(iso)) {
			case "00" : siteCount[0]++;break;
			case "01" : siteCount[1]++;break;
			case "10" : siteCount[2]++;break;
			case "11" : siteCount[3]++;break;
			}
		}
		Log.info("value: count");
		Log.info("00   : " + siteCount[0]);
		Log.info("01   : " + siteCount[1]);
		Log.info("10   : " + siteCount[2]);
		Log.info("11   : " + siteCount[3]);
		this.siteCount = siteCount;
		
		data.initAndValidate();

		return data;
	}

	private boolean[] toBoolean(String str) {
		boolean [] b = new boolean[100];
		str = str.replaceAll("\\s", "");
		String [] strs = str.split(",");
		for (String s : strs) {
			b[Integer.parseInt(s)] = true;
		}
		return b;
	}

	private String normalise(String v, boolean [] threshold) {
		if (v.equals("NA")) {
			return "?";
		}
		try {
			int value = Integer.parseInt(v);
			if (threshold[value]) {
				return "1";
			} else {
				return "0";
			}
		} catch (NumberFormatException e) {
			return "?";
		}
	}

	public static void main(String[] args) throws Exception {
		new Application(new TSAModelSelector(), "DPLACE Model Selector", args);
		System.exit(0);
	}

}
